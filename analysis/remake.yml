sources: remake

packages:
  - ape
  - XML
  - geiger
  - dplyr
  - arbutus
  - diversitree
  - parallel
  - reshape2
  - ggplot2
  - grid
  - gridExtra
  - sowsear
  - markdown

targets:
  all:
    depends:
      - figures
      - tables
      - model-adequacy.html

  data:
    depends:
      - leaf_n
      - seed_mass
      - sla

  fits:
    depends: 
      - fits_ml
      - fits_bayes

  figures:
    depends:
      - output/figs/aic-support.pdf
      - output/figs/dic-support.pdf
      - output/figs/pval-hist-ml.pdf
      - output/figs/pval-hist-bayes.pdf
      - output/figs/ad-aic.pdf
      - output/figs/ad-dic.pdf
      - output/figs/ad-size-ml.pdf
      - output/figs/ad-size-bayes.pdf
      - output/figs/ad-age-ml.pdf
      - output/figs/ad-age-bayes.pdf
      - output/figs/two-clades.pdf

  tables:
    depends:
      - output/results-ml.csv
      - output/results-bayes.csv

  data_subsets:
    depends: [leaf_n_subsets, seed_mass_subsets, sla_subsets]

  data/wright_2004.xls:
    command: download_wright_2004(target_name)
    cleanup_level: purge
  wright_2004:
    command: process_wright_2004("data/wright_2004.xls")
    packages: xlsx

  kew:
    command: kew_build()
    cleanup_level: never
    check: exists

  data/leda.txt:
    command: download_leda(target_name)
    cleanup_level: purge
  leda:
    command: process_leda("data/leda.txt")

  data/zae/PhylogeneticResources.zip:
    command: download_zae_trees(target_name)
    cleanup_level: purge
    check: exists
  data/zae/Spermatophyta_Genera.csv:
    command: download_zae_genera(target_name)
    cleanup_level: purge

  vascular_plant_phylogeny:
    command: unpack_tree("data/zae/PhylogeneticResources.zip")
    ## This will prevent the expensive re-hashing of
    ## PhylogeneticResources.zip
    check: code
  genus_order_lookup:
    command: unpack_genus_order_lookup("data/zae/Spermatophyta_Genera.csv")

  synonyms:
    command: make_synonyms("data/spermatophyta_synonyms_PLANTLIST.csv", vascular_plant_phylogeny)
    ## Also avoids expensive hash
    check: code
  corrections:
    command: make_corrections("data/names-tr.txt", vascular_plant_phylogeny)

  species_leaf_n:
    command: make_species_leaf_n(wright_2004, synonyms, corrections)
  species_seed_mass:
    command: make_species_seed_mass(kew, synonyms, corrections)
  species_sla:
    command: make_species_sla(wright_2004, leda, synonyms, corrections)

  leaf_n:
    command: build_data(species_leaf_n, vascular_plant_phylogeny)
  seed_mass:
    command: build_data(species_seed_mass, vascular_plant_phylogeny)
  sla:
    command: build_data(species_sla, vascular_plant_phylogeny)

  ## These are the partitioned data sets.  There's repetition here
  ## because I'm not yet supporting templating of target types.
  leaf_n_subsets:
    command: make_data_subsets(leaf_n)
  seed_mass_subsets:
    command: make_data_subsets(seed_mass)
  sla_subsets:
    command: make_data_subsets(sla)

  fits_ml_leaf_n:
    command: run_model_ad_ml(leaf_n_subsets)
  fits_ml_seed_mass:
    command: run_model_ad_ml(seed_mass_subsets)
  fits_ml_sla:
    command: run_model_ad_ml(sla_subsets)
  fits_ml:
    command: combine_fits(fits_ml_leaf_n, fits_ml_seed_mass, fits_ml_sla)

  fits_bayes_leaf_n:
    command: run_model_ad_bayes(leaf_n_subsets)
  fits_bayes_seed_mass:
    command: run_model_ad_bayes(seed_mass_subsets)
  fits_bayes_sla:
    command: run_model_ad_bayes(sla_subsets)
  fits_bayes:
    command: combine_fits(fits_bayes_leaf_n, fits_bayes_seed_mass, fits_bayes_sla)

  fits_ml_best:
    command: prune_dataset_best(fits_ml)
  fits_bayes_best:
    command: prune_dataset_best(fits_bayes)

  example_fits:
    command: extract_example_fits(fits_ml_seed_mass)

  output/figs/aic-support.pdf:
    plot: {width: 9, height: 6}
    command: fig_model_support_ic(fits_ml)

  output/figs/dic-support.pdf:
    plot: {width: 9, height: 6}
    command: fig_model_support_ic(fits_bayes)

  output/figs/pval-hist-ml.pdf:
    plot: {width: 9, height: 5}
    command: fig_pval_histogram(fits_ml_best)

  output/figs/pval-hist-bayes.pdf:
    plot: {width: 9, height: 5}
    command: fig_pval_histogram(fits_bayes_best)

  output/figs/ad-aic.pdf:
    plot: {width: 7, height: 6}
    command: fig_modelad_ic(fits_ml)

  output/figs/ad-dic.pdf:
    plot: {width: 7, height: 6}
    command: fig_modelad_ic(fits_bayes)

  output/figs/ad-size-ml.pdf:
    plot: {width: 7, height: 6}
    command: fig_modelad_size(fits_ml_best)

  output/figs/ad-size-bayes.pdf:
    plot: {width: 7, height: 6}
    command: fig_modelad_size(fits_bayes_best)

  output/figs/ad-age-ml.pdf:
    plot: {width: 7, height: 6}
    command: fig_modelad_age(fits_ml_best)

  output/figs/ad-age-bayes.pdf:
    plot: {width: 7, height: 6}
    command: fig_modelad_age(fits_bayes_best)

  output/figs/two-clades.pdf:
    plot: {width: 9, height: 5}
    command: fig_two_clades(example_fits)

  output/results-ml.csv:
    command: write_csv(fits_ml, target_name)
  output/results-bayes.csv:
    command: write_csv(fits_bayes, target_name)

  model-adequacy.Rmd:
    command: sowsear("./model-adequacy.R", output=target_name)
  model-adequacy.md:
    knitr: true
    depends:
      - species_sla
      - species_leaf_n
      - species_seed_mass
      - fits_ml
      - fits_ml_best
      - fits_bayes
      - fits_bayes_best
      - example_fits
      - vascular_plant_phylogeny
  model-adequacy.html:
    command: md2html("model-adequacy.md")
